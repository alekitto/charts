{{- $udpEntrypoints := dict -}}
{{- range $name, $port := .Values.entrypoints -}}
{{- if hasSuffix "/udp" $port -}}
{{- $udpEntrypoints := set $udpEntrypoints $name (($port | toString) | replace "/udp" "") -}}
{{- end -}}
{{- end -}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "traefik.fullname" . }}
  labels:
    app: {{ template "traefik.name" . }}
    chart: {{ template "traefik.chart" . }}
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
  {{- if .Values.service }}
  {{- range $key, $value := .Values.service.labels }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
  {{- end }}
  annotations:
  {{- if .Values.service }}
  {{- range $key, $value := .Values.service.annotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
  {{- end }}
spec:
  type: {{ .Values.serviceType }}
  {{- if .Values.loadBalancerIP }}
  loadBalancerIP: {{ .Values.loadBalancerIP }}
  {{- end }}
  {{- if .Values.externalIPs }}
  externalIPs:
    {{- range $ip := .Values.externalIPs }}
    - {{ $ip }}
    {{- end }}
  {{- end }}
  {{- if .Values.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
    {{- range $cidr := .Values.loadBalancerSourceRanges }}
    - {{ $cidr }}
    {{- end }}
  {{- end }}
  {{- if (and .Values.externalTrafficPolicy (not (eq .Values.serviceType "ClusterIp"))) }}
  externalTrafficPolicy: {{ .Values.externalTrafficPolicy }}
  {{- end }}
  selector:
    app: {{ template "traefik.name" . }}
    release: {{ .Release.Name }}
  ports:
  - port: 80
    name: http
    {{- if (and (eq .Values.serviceType "NodePort") (eq .Values.deployType "Deployment") (not (empty .Values.service.nodePorts.http)))}}
    nodePort: {{ .Values.service.nodePorts.http }}
    {{- end }}
    targetPort: http
  {{- if .Values.ssl.enabled }}
  - port: 443
    name: https
    {{- if (and (eq .Values.serviceType "NodePort") (eq .Values.deployType "Deployment") (not (empty .Values.service.nodePorts.https)))}}
    nodePort: {{ .Values.service.nodePorts.https }}
    {{- end }}
    targetPort: https
  {{- end }}
  {{- if .Values.dashboard.enabled }}
  - port: 8080
    name: traefik
    {{- if (and (eq .Values.serviceType "NodePort") (eq .Values.deployType "Deployment") (not (empty .Values.service.nodePorts.https)))}}
    nodePort: {{ .Values.service.nodePorts.dash }}
    {{- end }}
    targetPort: dash
  {{- end }}
  {{- if (.Values.metrics.prometheus.enabled)}}
  - port: 9105
    name: metrics
    targetPort: metrics
  {{- end }}
  {{- if .Values.entrypoints }}
  {{- range $name, $port := .Values.entrypoints }}
  {{- if not (hasSuffix "/udp" ($port | toString)) }}
  - port: {{ $port }}
    name: {{ $name }}
    targetPort: {{ $port }}
  {{- end }}
  {{- end }}
  {{- end }}
{{- if $udpEntrypoints }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "traefik.fullname" . }}-udp
  labels:
    app: {{ template "traefik.name" . }}
    chart: {{ template "traefik.chart" . }}
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
  {{- if .Values.service }}
  {{- range $key, $value := .Values.service.labels }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
  {{- end }}
  annotations:
  {{- if .Values.service }}
  {{- range $key, $value := .Values.service.annotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
  {{- end }}
spec:
  type: {{ .Values.serviceType }}
  {{- if .Values.loadBalancerIP }}
  loadBalancerIP: {{ .Values.loadBalancerIP }}
  {{- end }}
  {{- if .Values.externalIPs }}
  externalIPs:
    {{- range $ip := .Values.externalIPs }}
    - {{ $ip }}
    {{- end }}
  {{- end }}
  {{- if .Values.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
    {{- range $cidr := .Values.loadBalancerSourceRanges }}
    - {{ $cidr }}
    {{- end }}
  {{- end }}
  {{- if (and .Values.externalTrafficPolicy (not (eq .Values.serviceType "ClusterIp"))) }}
  externalTrafficPolicy: {{ .Values.externalTrafficPolicy }}
  {{- end }}
  selector:
    app: {{ template "traefik.name" . }}
    release: {{ .Release.Name }}
  ports:
  {{- if $udpEntrypoints }}
  {{- range $name, $port := $udpEntrypoints }}
  - port: {{ $port }}
    name: {{ $name }}
    targetPort: {{ $port }}
    protocol: UDP
  {{- end }}
  {{- end }}
{{- end }}
