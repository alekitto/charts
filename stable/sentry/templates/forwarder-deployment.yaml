apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "sentry.fullname" . }}-post-process-forwarder
  labels:
    app: {{ template "sentry.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    matchLabels:
        app: {{ template "sentry.fullname" . }}
        release: "{{ .Release.Name }}"
        role: forwarder
  replicas: {{ .Values.forwarder.replicacount }}
  template:
    metadata:
      annotations:
        metrics-enabled: {{ .Values.metrics.enabled | quote }}
        checksum/configYml: {{ .Values.config.configYml | sha256sum }}
        checksum/sentryConfPy: {{ .Values.config.sentryConfPy | sha256sum }}
        checksum/secrets.yaml: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
      {{- if .Values.forwarder.podAnnotations }}
{{ toYaml .Values.forwarder.podAnnotations | indent 8 }}
      {{- end }}
      labels:
        app: {{ template "sentry.fullname" . }}
        release: "{{ .Release.Name }}"
        role: forwarder
        {{- if .Values.forwarder.podLabels }}
{{ toYaml .Values.forwarder.podLabels | indent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "sentry.serviceAccountName" . }}
      {{- if .Values.forwarder.affinity }}
      affinity:
{{ toYaml .Values.forwarder.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.forwarder.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.forwarder.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.forwarder.tolerations }}
      tolerations:
{{ toYaml .Values.forwarder.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.forwarder.schedulerName }}
      schedulerName: "{{ .Values.forwarder.schedulerName }}"
      {{- end }}
      {{- if .Values.forwarder.priorityClassName }}
      priorityClassName: "{{ .Values.forwarder.priorityClassName }}"
      {{- end }}
      {{- if .Values.image.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.image.imagePullSecrets | indent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}-forwarder
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
          - "run"
          - "post-process-forwarder"
          - "--commit-batch-size 1"
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        env:
        - name: SNUBA
          value: http://{{ include "snuba.fullname" . }}:1218
        - name: SENTRY_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "sentry.fullname" . }}
              key: sentry-secret
        - name: SENTRY_DB_USER
          value: {{ default "sentry" .Values.postgresql.postgresqlUsername | quote }}
        - name: SENTRY_DB_NAME
          value: {{ default "sentry" .Values.postgresql.postgresqlDatabase | quote }}
        - name: SENTRY_DB_PASSWORD
          valueFrom:
            secretKeyRef:
            {{- if .Values.postgresql.existingSecret }}
              name: {{ .Values.postgresql.existingSecret }}
            {{- else }}
              name: {{ template "sentry.postgresql.secret" . }}
            {{- end }}
              key: {{ template "sentry.postgresql.secretKey" . }}
        - name: SENTRY_POSTGRES_HOST
          value: {{ template "sentry.postgresql.host" . }}
        - name: SENTRY_POSTGRES_PORT
          value: {{ template "sentry.postgresql.port" . }}
        {{- if or (.Values.global.redis.enabled) (.Values.global.redis.password) }}
        - name: SENTRY_REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
            {{- if .Values.global.redis.existingSecret }}
              name: {{ .Values.global.redis.existingSecret }}
            {{- else }}
              name: {{ template "sentry.redis.secret" . }}
            {{- end }}
              key: {{ template "sentry.redis.secretKey" . }}
        {{- end }}
        - name: SENTRY_REDIS_HOST
          value: {{ template "sentry.redis.host" . }}
        - name: SENTRY_REDIS_PORT
          value: {{ template "sentry.redis.port" . }}
        - name: SENTRY_EMAIL_HOST
          value: {{ default "" .Values.email.host | quote }}
        - name: SENTRY_EMAIL_PORT
          value: {{ default "" .Values.email.port | quote }}
        - name: SENTRY_EMAIL_USER
          value: {{ default "" .Values.email.user | quote }}
        - name: SENTRY_EMAIL_PASSWORD
          valueFrom:
            secretKeyRef:
            {{- if .Values.email.existingSecret }}
              name: {{ .Values.email.existingSecret }}
            {{- else }}
              name: {{ template "sentry.fullname" . }}
            {{- end }}
              key: smtp-password
        - name: SENTRY_EMAIL_USE_TLS
          value: {{ .Values.email.use_tls | quote }}
        - name: SENTRY_SERVER_EMAIL
          value: {{ .Values.email.from_address | quote }}
        {{ if eq .Values.filestore.backend "gcs" }}
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /var/run/secrets/google/{{ .Values.filestore.gcs.credentialsFile }}
        {{ end }}
{{- if .Values.forwarder.env }}
{{ toYaml .Values.forwarder.env | indent 8 }}
{{- end }}
        volumeMounts:
        - mountPath: /etc/sentry
          name: config
          readOnly: true
        {{- if eq .Values.filestore.backend "gcs" }}
        - name: sentry-google-cloud-key
          mountPath: /var/run/secrets/google
        {{- end }}
        {{- if eq .Values.filestore.backend "filesystem" }}
        - mountPath: {{ .Values.filestore.filesystem.path }}
          name: sentry-data
        {{- end }}
        resources:
{{ toYaml .Values.forwarder.resources | indent 12 }}
      volumes:
      - name: config
        configMap:
          name: {{ template "sentry.fullname" . }}
          defaultMode: 0555
      {{- if eq .Values.filestore.backend "gcs" }}
      - name: sentry-google-cloud-key
        secret:
          secretName: {{ .Values.filestore.gcs.secretName }}
      {{ end }}
      - name: sentry-data
      {{- if and (.Values.filestore.filesystem.persistence.enabled) (.Values.filestore.filesystem.persistence.persistentforwarders) }}
        persistentVolumeClaim:
          claimName: {{ .Values.filestore.filesystem.persistence.existingClaim | default (include "sentry.fullname" .) }}
      {{- else }}
        emptyDir: {}
      {{ end }}
